apply plugin: 'de.undercouch.download'

// 下载文件临时文件夹
project.ext.TMP_DIR = project.buildDir.toString() + '/downloads/'

// 下载模型的 target路径：下载地址
def models = [
        // mnist
        '../demo/src/main/assets'    : [
                'https://img0.didiglobal.com/static/starfile/node20190926/895f1e95e30aba5dd56d6f2ccf768b57/APWmDl1XCf1569496524271.zip', // mnist
                'https://img0.didiglobal.com/static/starfile/node20190805/895f1e95e30aba5dd56d6f2ccf768b57/fm2gKZ37I11565012061785.zip', // squeeze
                'https://img0.didiglobal.com/static/starfile/node20190826/895f1e95e30aba5dd56d6f2ccf768b57/eraqUlJwtE1566819400795.zip', // recognize
                'https://img0.didiglobal.com/static/starfile/node20191028/895f1e95e30aba5dd56d6f2ccf768b57/dLq1wk2V2n1572257128485.zip', // pytorch
                'https://img0.didiglobal.com/static/starfile/node20191213/895f1e95e30aba5dd56d6f2ccf768b57/PbYPEg4htg1576230133015.zip', // mobilenet_v1_1.0_224_quant.zip
                'https://img0.didiglobal.com/static/starfile/node20191213/895f1e95e30aba5dd56d6f2ccf768b57/DmgvCkxKxE1576230200176.zip' // mobilenet_v1_1.0_224.zip
        ]

]

task downloadFiles(dependsOn: assemble) {
    def tmpDir = new File(project.ext.TMP_DIR)
    if (!tmpDir.exists()) {
        tmpDir.mkdirs()
    }
    models.each { path, urls ->
        for (modelUrl in urls) {
            def localFile = modelUrl.split("/")[-1]
            if (!(new File(project.ext.TMP_DIR + '/' + localFile)).exists()) {
                download {
                    println "Downloading ${localFile} from ${modelUrl}"
                    src modelUrl
                    dest tmpDir
                    onlyIfModified true
                }
            }
        }
    }

}

task extractModels(dependsOn: downloadFiles) {
    models.each { path, urls ->

        println "extract models ${urls} into ${path}"

        copy {
            for (f in urls) {
                def localFile = f.split("/")[-1]
                def localExt = localFile.split("[.]")[-1]
                if (localExt == "tgz") {
                    from tarTree(project.ext.TMP_DIR + '/' + localFile)
                } else {
                    from zipTree(project.ext.TMP_DIR + '/' + localFile)
                }
            }

            into file(projectDir.toString() + '/' + path)
            fileMode 0644
            exclude '**/LICENSE'

        }
    }

}


