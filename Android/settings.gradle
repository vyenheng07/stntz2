gradle.ext.aoeRoot = settingsDir

def rootDir = gradle.ext.aoeRoot

// Examples
include ':examples-demo'

// Features
include ':features-mnist'
include ':features-squeeze'
include ':features-recognize'

// Library
include ':library-core'
include ':library-api'
include ':library-logging'
include ':library-model-option-loader'

// Runtime
include ':runtime-tensorflow-lite'
include ':runtime-mnn'
include ':runtime-ncnn'

project(':examples-demo').projectDir = new File(rootDir, 'demo/demo')

project(':features-mnist').projectDir = new File(rootDir, 'demo/features/mnist')
project(':features-squeeze').projectDir = new File(rootDir, 'demo/features/squeeze')
project(':features-recognize').projectDir = new File(rootDir, 'demo/features/recognize')

project(':library-core').projectDir = new File(rootDir, 'aoe/core')
project(':library-api').projectDir = new File(rootDir, 'aoe/api')
project(':library-logging').projectDir = new File(rootDir, 'aoe/logging')
project(':library-model-option-loader').projectDir = new File(rootDir, 'aoe/model-option-loader')

project(':runtime-tensorflow-lite').projectDir = new File(rootDir, 'third_party/tensorflow-lite')
project(':runtime-mnn').projectDir = new File(rootDir, 'third_party/mnn')
project(':runtime-ncnn').projectDir = new File(rootDir, 'third_party/ncnn')


// NOTE：全局设置开发模式，AoE内部开发使用工程依赖管理
gradle.ext.aoeDevEnabled = false
if (gradle.ext.has("aoeDevEnabled") && gradle.ext.aoeDevEnabled) {
    apply from: 'dev_settings.gradle'
}

