apply plugin: 'com.android.library'
apply from: '../../../constants.gradle'

android {
    compileSdkVersion project.ext.compileSdkVersion
    defaultConfig {
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode project.ext.releaseVersionCode
        versionName project.ext.releaseVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.annotation:annotation:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    if (project.ext.has("aoePublishEnabled") && project.ext.aoePublishEnabled) {
        implementation "com.didi.aoe:library-logging:$project.ext.releaseVersion"
        implementation "com.didi.aoe:library-api:$project.ext.releaseVersion"
        implementation "com.didi.aoe:library-model-option-loader:$project.ext.releaseVersion"
        api "com.didi.aoe:extensions-parcel-kryo:$project.ext.releaseVersion"
    } else {
        implementation project(':library-logging')
        implementation project(':library-api')
        implementation project(':runtime-ncnn')
        implementation project(':library-model-option-loader')
        api project(':extensions-parcel-kryo')
    }

}

ext {
    releaseArtifact = 'features-squeeze'
    releaseDescription = 'The AoE squeeze library'
}
apply from: '../../../publish.gradle'
